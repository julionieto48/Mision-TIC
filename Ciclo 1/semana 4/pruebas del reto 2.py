# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11ujc2WQWhr-vTmUF-9LcWzmN9-KrZGvc
"""

# Reto 2  contador de votos
def contadorDeVotosCentroDemocratico(p,n,urna):
  contadorP = 0
  contadorN = 0
  registroDeVotos = []
  for i in range(0,len(urna)):
    
    if urna[i] in p:

      contadorP += 1
      registroDeVotos.append('P')
    elif urna[i] in n:
      contadorP += 1
      registroDeVotos.append('N')
    
  return registroDeVotos

    
   
     




p = ['A','S','D','F'] # INGRESO p
n = ['Z','X','C','V'] # INGRESO n

urna = ['A','X','D','D']  # urna de votacion

contadorDeVotosCentroDemocratico(p,n,urna)

# prueba 1
def contadorDeVotosCentroDemocratico(p,n,urna):
  contadorP = 0
  contadorN = 0
  registroDeVotos = []
  for i in range(0,len(urna)):
    
    if urna[i] in p:
      contadorP += 1
      contadorN -= 1
      print(contadorP ,contadorN )
      
      if contadorN >= 0 :
        registroDeVotos.append('I')
      elif contadorP >= 1:
        registroDeVotos.append('P')
    elif urna[i] in n:
      contadorN += 1
      contadorP -= 1
      print(contadorP ,contadorN )
      if contadorP >= 0 :
        registroDeVotos.append('I')
      elif contadorN >= 1:
        registroDeVotos.append('N')
    
  return registroDeVotos

    
   
p = ['A','S','D','F'] # INGRESO p
n = ['Z','X','C','V'] # INGRESO n 
urna = ['A','X','D','D']
print(contadorDeVotosCentroDemocratico(p,n,urna))



p1 = ['A','S','D','F'] # INGRESO p
n1 = ['Z','X','C','V'] # INGRESO n

urna1 = ['A','X','D','D','C','C','C','C','S','S','D','F','Q','W','E','A','A','C','C','C','X','X','X']  # urna de votacion
print(contadorDeVotosCentroDemocratico(p1,n1,urna1))

# prueba 2 
def contadorDeVotosCentroDemocratico(p,n,urna):
  contadorP = 0
  contadorN = 0
  anterior = 0
  registroDeVotos = []
  for i in range(0,len(urna)):
    
    if urna[i] in p:
      contadorP += 1
      anterior += 1
      
      if anterior == 0 :
        registroDeVotos.append('I')
      elif contadorP >0:
        registroDeVotos.append('P')
      
      print(anterior)

      
           
    elif urna[i] in n:
      contadorN += 1
      anterior -= 1
      
      print(anterior)
      if anterior == 0 :
        registroDeVotos.append('I')
      elif contadorN > 0:
        registroDeVotos.append('N')
      
      
     
    
  return registroDeVotos

    
   
p = ['A','S','D','F'] # INGRESO p
n = ['Z','X','C','V'] # INGRESO n 
urna = ['A','X','D','D']
print(contadorDeVotosCentroDemocratico(p,n,urna))


p1 = ['A','S','D','F'] # INGRESO p
n1 = ['Z','X','C','V'] # INGRESO n
urna1 = ['A','X','D','D','C','C','C','C','S','S','D','F','Q','W','E','A','A','C','C','C','X','X','X']  # urna de votacion
print(contadorDeVotosCentroDemocratico(p1,n1,urna1))

p2 = ['X','A','V'] # INGRESO p
n2 = ['F','X','S'] # INGRESO n
urna2 = ['A','S','D','F','X','C','V','T','R','E','A','S','D','B','V','B','C','V','C','V','F','A','S']  # urna de votacion
print(contadorDeVotosCentroDemocratico(p2,n2,urna2))

#prueba 3
def contadorDeVotosCentroDemocratico(p,n,urna):
  contador = 0
  anterior = 0
  registroDeVotos = []
  for i in range(0,len(urna)):
    
    if urna[i] in p:
      contador += 1
      anterior = contador
                
      print(anterior)
      
           
    elif urna[i] in n:
      contador -= 1
      anterior = contador
      
      print(anterior)
    
    if contador > 0 :
      registroDeVotos.append('P')
    elif contador < 0:
      registroDeVotos.append('N')
    elif contador == 0:
      registroDeVotos.append('I')
      

      
      
     
    
  return registroDeVotos

    
   
p = ['A','S','D','F'] # INGRESO p
n = ['Z','X','C','V'] # INGRESO n 
urna = ['A','X','D','D']
print(contadorDeVotosCentroDemocratico(p,n,urna))


p1 = ['A','S','D','F'] # INGRESO p
n1 = ['Z','X','C','V'] # INGRESO n
urna1 = ['A','X','D','D','C','C','C','C','S','S','D','F','Q','W','E','A','A','C','C','C','X','X','X']  # urna de votacion
print(contadorDeVotosCentroDemocratico(p1,n1,urna1))

p2 = ['X','A','V'] # INGRESO p
n2 = ['F','X','S'] # INGRESO n
urna2 = ['A','S','D','F','X','C','V','T','R','E','A','S','D','B','V','B','C','V','C','V','F','A','S']  # urna de votacion
print(contadorDeVotosCentroDemocratico(p2,n2,urna2))

# prueba n
def contadorDeVotosCentroDemocratico(p,n,urna):

  p = list(p)
  n = list(n)
  urna = list(urna)
  contador = 0
  anterior = 0
  registroDeVotos = []
  str1 = ""
  for i in range(0,len(urna)):
    
    if urna[i] in p:
      contador += 1
      anterior += 1
      print(contador, anterior)       
            
           
    elif urna[i] in n:
      contador -= 1
      anterior -= 1

      print(contador, anterior)
      
      
    
    if contador > 0 :
      registroDeVotos.append('P')
    elif contador < 0:
      registroDeVotos.append('N')
    elif contador   == 0:
      registroDeVotos.append('I')
      
    
    
    
  return str1.join(registroDeVotos)

    
   
p ='XAV'
n ='FXS'
urna ='ASDFXCVTREASDBVBCVCVFAS'
print(contadorDeVotosCentroDemocratico(p,n,urna))

# prueba n
def contadorDeVotosCentroDemocratico(p,n,urna):

  p = list(p)
  n = list(n)
  urna = list(urna)
  registroDeVotos = []
  str1 = ""

  
  anterior = 0
  acumulado = 0
  flagNulo = 0
  letraAnterior = ''
  for i in range(0,len(urna)):
    
    if urna[i] in p:
      selector = 1             
    elif urna[i] in n:
      selector = -1 
    elif (urna[i] in p) and (urna[i] in n):
      selector = 0             #si hay dos elementos en p  y en n
      flagNulo = 1             #activa bandera de nulidad
    elif urna[i] not in p  or urna[i] not in n  : 
      selector = 0            # cuando no esta en lo posibles candidatos o voto nulo
      flagNulo = 1 

    
    anterior = acumulado
    acumulado =  acumulado + selector

    if flagNulo == 0:
      if acumulado > 0 :
        letra = 'P'
        registroDeVotos.append(letra)
      elif acumulado < 0:
        letra = 'N'
        registroDeVotos.append(letra)
      elif acumulado  == 0:
         letra = 'I'
         registroDeVotos.append(letra)
      
      
    elif flagNulo == 1:
      registroDeVotos.append(letraAnterior)
      flagNulo = 0

    letraAnterior = letra
    print(letraAnterior)
     

    
    


    


    

    print(selector,anterior,acumulado)
    
    
    
    
   

      
      
    

      
    
    
    
  return str1.join(registroDeVotos)

    
   
p ='XAV'
n ='FXS'
urna ='ASDFXCVTREASDBVBCVCVFAS'
a = contadorDeVotosCentroDemocratico(p,n,urna)
print(contadorDeVotosCentroDemocratico(p,n,urna))

rta = 'PIINNNIIIIPIIIPPPPPPPPP'

rta == a

# prueba n
def contadorDeVotosCentroDemocratico(p,n,urna):

  p = list(p)
  n = list(n)
  urna = list(urna)
  registroDeVotos = []
  str1 = ""

  
  anterior = 0
  acumulado = 0
  flagNulo = 0
  letraAnterior = ''
  for i in range(0,len(urna)):

    
    
    if (urna[i] in p) and (urna[i] not in n):
      selector = 1             
    elif (urna[i] in n) and (urna[i] not in p):
      selector = -1 
    elif (urna[i] in p) and (urna[i] in n):
      selector = 0             #si hay dos elementos en p  y en n
      flagNulo = 1             #activa bandera de nulidad
    elif urna[i] not in p  or urna[i] not in n  : 
      selector = 0            # cuando no esta en lo posibles candidatos o voto nulo
      flagNulo = 1 

    
    anterior = acumulado
    acumulado =  acumulado + selector

    if flagNulo == 0:
      if acumulado > 0 :
        letra = 'P'
        registroDeVotos.append(letra)
      elif acumulado < 0:
        letra = 'N'
        registroDeVotos.append(letra)
      elif acumulado  == 0:
         letra = 'I'
         registroDeVotos.append(letra)
      letraAnterior = letra
      
    elif flagNulo == 1:
      registroDeVotos.append(letraAnterior)
      flagNulo = 0

    
    #print(letraAnterior)
     
    

    #print(selector,anterior,acumulado)
    
    
     
    
    
    
  return str1.join(registroDeVotos)

    
   
p ='CGFEAD'
n ='GABCEF'
urna ='EFDBGAADEEAADBFEGBDDGAA'
a = contadorDeVotosCentroDemocratico(p,n,urna)
print(contadorDeVotosCentroDemocratico(p,n,urna))

rta = 'IIPIIIIPPPPPPPPPPIPPPPP'

rta == a

# que pasa cuando se inicia con voto nulo?
def contadorDeVotosCentroDemocratico(p,n,urna):

  p = list(p)
  n = list(n)
  urna = list(urna)
  registroDeVotos = []
  str1 = ""

  
  anterior = 0
  acumulado = 0
  flagNulo = 0
  letraAnterior = 'I'
  for i in range(0,len(urna)):

    
    
    if (urna[i] in p) and (urna[i] in n):
      selector = 0             #si hay dos elementos en p  y en n
      flagNulo = 1             #activa bandera de nulidad
    elif (urna[i] in p) and (urna[i] not in n):
      selector = 1  
    elif (urna[i] in n) and (urna[i] not in p):
      selector = -1 

    elif urna[i] not in p  or urna[i] not in n  : 
      selector = 0            # cuando no esta en lo posibles candidatos o voto nulo
      flagNulo = 1 

    
    anterior = acumulado
    acumulado =  acumulado + selector

    if flagNulo == 0:
      if acumulado > 0 :
        letra = 'P'
        registroDeVotos.append(letra)
      elif acumulado < 0:
        letra = 'N'
        registroDeVotos.append(letra)
      elif acumulado  == 0:
         letra = 'I'
         registroDeVotos.append(letra)
      letraAnterior = letra
      
      
    elif flagNulo == 1:
      registroDeVotos.append(letraAnterior)
      flagNulo = 0
    

     
    
    
    
  return str1.join(registroDeVotos)

    
   
p ='CGFEAD'
n ='GABCEF'
urna ='EFDBGAADEEAADBFEGBDDGAA'
r = contadorDeVotosCentroDemocratico(p,n,urna)
print(contadorDeVotosCentroDemocratico(p,n,urna))

rtaEsperada = 'IIPIIIIPPPPPPPPPPIPPPPP'

r == rtaEsperada